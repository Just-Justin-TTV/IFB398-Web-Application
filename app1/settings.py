"""
Django settings for app1 project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
import logging

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent  # Root directory of the project


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-j0_9nwv@qs^@w=g=2j#$ziphq)f(gwhg-v*og)&@)h7+y%0z*%'  # Secret key for cryptographic signing

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # Set to False in production

ALLOWED_HOSTS = []  # Hosts/domain names that this Django site can serve


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',          # Admin site
    'django.contrib.auth',           # Authentication framework
    'app1',                          # Main application
    'django.contrib.contenttypes',   # Content type system
    'django.contrib.sessions',       # Session framework
    'django.contrib.messages',       # Messaging framework
    'tailwind',                      # Tailwind CSS integration
    'django.contrib.staticfiles',    # Static file management
    'theme',                         # Tailwind theme app
    'django_browser_reload',         # Browser reload for development
    'django.contrib.humanize',       # Humanize template filters
]

# Logging configuration for debugging purposes
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',  # Output logs to console
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',  # Log level for all messages
    },
}

# Middleware definition
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # Security-related middleware
    'django.contrib.sessions.middleware.SessionMiddleware',  # Manages sessions
    'django.middleware.common.CommonMiddleware',  # Common HTTP middleware
    'django.middleware.csrf.CsrfViewMiddleware',  # CSRF protection
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Auth session management
    'django.contrib.messages.middleware.MessageMiddleware',  # Messaging
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Clickjacking protection
    "django_browser_reload.middleware.BrowserReloadMiddleware",  # Auto reload during development
]

# Root URL configuration
ROOT_URLCONF = 'app1.urls'

# Template configuration
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Template engine
        'DIRS': [
            os.path.join(BASE_DIR, 'app1/templates'),   # Custom templates directory
            os.path.join(BASE_DIR, 'theme/templates'),  # Tailwind theme templates
        ],

        'APP_DIRS': True,  # Enable template loading from app directories
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',   # Debug information
                'django.template.context_processors.request', # Request object in templates
                'django.contrib.auth.context_processors.auth', # Auth context in templates
                'django.contrib.messages.context_processors.messages', # Messages framework
                'app1.context_processors.theme_context',  # Custom theme context processor
                # 'app1.context_processors.accessibility_settings', # Optional accessibility context
            ],
        },
    },
]

# WSGI application
WSGI_APPLICATION = 'app1.wsgi.application'


# Database configuration
# Using SQLite for development
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  # SQLite backend
        'NAME': BASE_DIR / 'sdt_app.db',        # Database file location
    }
}


# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',  # Avoid passwords similar to user attributes
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',  # Minimum password length
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',  # Prevent common passwords
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',  # Prevent fully numeric passwords
    },
]

APPEND_SLASH = False  # Disable automatic URL slash appending


# Internationalization
LANGUAGE_CODE = 'en-us'  # Default language

TIME_ZONE = 'UTC'        # Default timezone

USE_I18N = True          # Enable Django internationalization

USE_TZ = True            # Enable timezone-aware datetimes


# Static files (CSS, JavaScript, Images)
STATIC_URL = 'static/'  # URL prefix for static files


# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'  # Default auto-increment field for models

# Tailwind CSS app configuration
TAILWIND_APP_NAME = 'theme'

# Internal IPs for development tools like django-browser-reload
INTERNAL_IPS = [
    "127.0.0.1",
]
